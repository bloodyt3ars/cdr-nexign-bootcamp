openapi: 3.0.1
info:
  title: №3 Домашнее задание
  description: Создание микросервисов с использование Java Spring Boot
  contact:
    name: Antonov Vladimir
    url: https://t.me/bloodyt3ars
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: abonent
    description: В этом разделе находятся методы взаимодействия абонента с системой
  - name: auth
    description: В этом разделе находятся методы авторизации и идентификации пользователя
  - name: manager
    description: В этом разделе находятся методы взаимодействия менеджера с системой
paths:
  /manager/abonent:
    post:
      tags:
        - manager
      summary: Менеджер создаёт нового абонента
      description: Менеджер создаёт нового абонента
      operationId: managerAbonent
      requestBody:
        description: В теле запроса обязательно должен быть логин абонента, его номер, тариф и сумма, на которую абонент планирует пополнить баланс
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbonentDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AbonentDto'
        '400':
          description: Invalid input data
  /auth/register:
    post:
      tags:
        - auth
      summary: Регистрация пользователя
      description: Позволяет зарегистрировать пользователя
      operationId: authRegister
      requestBody:
        description: В теле запроса обязательно должно быть имя, фамилия, логин и пароль
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/hal+json:
              schema:
                type: string
                example: Abonent registered successfully.
        '400':
          description: username is already taken
  /auth/logout:
    post:
      tags:
        - auth
      summary: Выход пользователя из системы
      description: Позволяет пользователю разлогиниться
      operationId: authLogout
      responses:
        '200':
          description: Successful operation
          content:
            application/hal+json:
              schema:
                type: string
        '400':
          description: Invalid input data
  /auth/login:
    post:
      tags:
        - auth
      summary: Авторизация пользователя
      description: Позволяет авторизоваться пользователю
      operationId: authLogin
      requestBody:
        description: В теле запроса обязательно должен быть логин и пароль
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/hal+json:
              schema:
                type: string
                example: Abonent signed success.
        '400':
          description: Invalid input data
  /manager/changeTariff:
    patch:
      tags:
        - manager
      summary: Менеджер изменяет тариф абонента
      description: Менеджер изменяет тариф абонента
      operationId: managerChangeTariff
      requestBody:
        description: В теле запроса обязательно должен быть номер телефона и тариф
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TariffDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TariffDto'
        '400':
          description: Invalid input data
  /manager/billing:
    patch:
      tags:
        - manager
      summary: Менеджер проводит тарификацию
      description: Менеджер проводит тарификацию
      operationId: managerBilling
      requestBody:
        description: В теле запроса должен быть action
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BillingResponse'
        '400':
          description: Invalid input data
  /abonent/pay:
    patch:
      tags:
        - abonent
      summary: Пополнение баланса абонентом
      description: Абонент пополняет свой счет
      operationId: abonentPay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PayDto'
        '400':
          description: Invalid input data
  /abonent/report/{numberPhone}:
    get:
      tags:
        - abonent
      summary: Получение отчета
      description: Абонент получает отчет по своему номеру телефона за прошедший месяц
      operationId: abonentReport
      parameters:
        - name: numberPhone
          in: path
          description: Номер телефона
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ReportResponse'
        '400':
          description: Invalid input data
          content:
            application/hal+json:
              schema:
                type: object
components:
  schemas:
    AbonentDto:
      type: object
      properties:
        username:
          type: string
          description: Логин
          example: i.petrov
        numberPhone:
          type: string
          description: Номер телефона
          example: '78005553535'
        tariff_id:
          type: string
          description: Тариф
          example: '11'
        balance:
          type: integer
          description: Баланс
          format: int32
          example: 400
      description: Сущность пользователя
    RegisterDto:
      type: object
      properties:
        firstName:
          type: string
          description: Имя
          example: Иван
        lastName:
          type: string
          description: Фамилия
          example: Петров
        username:
          type: string
          description: Логин
          example: i.petrov
        password:
          type: string
          description: Пароль
          example: i.P*tr*v
      description: Регистрация пользователя
    LoginDto:
      type: object
      properties:
        username:
          type: string
          description: Логин
          example: i.petrov
        password:
          type: string
          description: Пароль
          example: i.P*tr*v
      description: Авторизация
    TariffDto:
      type: object
      properties:
        numberPhone:
          type: string
          description: Номер телефона
          example: '78005553535'
        tariff_id:
          type: string
          description: Желаемый тариф
          example: '06'
      description: Изменить тариф
    BillingDto:
      type: object
      properties:
        action:
          type: string
          description: Действие
          example: run
      description: Тарификация
    BillingResponse:
      type: object
      properties:
        numbers:
          type: array
          items:
            $ref: '#/components/schemas/NumbersResponse'
    NumbersResponse:
      type: object
      properties:
        phoneNumber:
          type: string
          example: '7123123123'
        balance:
          type: string
          example: '440'
    PayDto:
      type: object
      properties:
        numberPhone:
          type: string
          description: Номер телефона
          example: '78005553535'
        money:
          type: integer
          description: Деньги
          format: int32
          example: 400
      description: Для оплаты
    CallRecordResponse:
      type: object
      properties:
        callType:
          type: string
          example: '01'
          enum:
            - OUTGOING
            - INCOMING
        callStart:
          type: string
          format: date-time
        callEnd:
          type: string
          format: date-time
        duration:
          type: string
          example: '00:07:43'
        cost:
          type: string
          example: '5.0'
    ReportResponse:
      type: object
      properties:
        id:
          type: string
          example: '235235'
        numberPhone:
          type: string
          example: '7123123123'
        tariffIndex:
          type: string
          example: '03'
        payload:
          type: array
          items:
            $ref: '#/components/schemas/CallRecordResponse'
        totalCost:
          type: string
          example: '5.0'
        monetaryUnit:
          type: string
          example: rubles
